# Generated by Django 3.2.9 on 2021-11-04 20:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=300, null=True)),
                ('date_time', models.DateTimeField(auto_now_add=True)),
                ('pathToBadgeImage', models.URLField()),
                ('isGivenBySystem', models.BooleanField()),
                ('owner_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sport_name', models.CharField(max_length=30, unique=True)),
                ('equipments', models.TextField(max_length=300)),
                ('max_players', models.IntegerField(blank=True, null=True)),
                ('special_location', models.CharField(blank=True, max_length=30, null=True)),
                ('general_rules', models.TextField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EventPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_name', models.CharField(max_length=30)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(max_length=300)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('date_time', models.DateTimeField()),
                ('participant_limit', models.IntegerField()),
                ('spectator_limit', models.IntegerField()),
                ('rule', models.CharField(max_length=250)),
                ('equipment_requirement', models.CharField(max_length=250)),
                ('status', models.CharField(max_length=10)),
                ('capacity', models.CharField(max_length=25)),
                ('location_requirement', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_info', models.CharField(blank=True, max_length=50, null=True)),
                ('skill_requirement', models.CharField(max_length=10)),
                ('repeating_frequency', models.IntegerField()),
                ('owner_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('sport_category_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='post.sport')),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_name', models.CharField(max_length=30)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(max_length=300)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('link', models.URLField(blank=True, null=True)),
                ('active', models.BooleanField()),
                ('owner_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('sport_category_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='post.sport')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(max_length=300)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('equipment_post_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='post.equipmentpost')),
                ('event_post_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='post.eventpost')),
                ('owner_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BadgeOfferedByEventPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('badge_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='post.badge')),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='post.eventpost')),
            ],
        ),
        migrations.AddField(
            model_name='badge',
            name='post_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='post.equipmentpost'),
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=8)),
                ('applicant_type', models.CharField(max_length=9)),
                ('event_post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='post.eventpost')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='badgeofferedbyeventpost',
            constraint=models.UniqueConstraint(fields=('post_id', 'badge_id'), name='badge offered by an event post'),
        ),
        migrations.AddConstraint(
            model_name='application',
            constraint=models.UniqueConstraint(fields=('user_id', 'event_post_id'), name='application to an event post per user'),
        ),
    ]
